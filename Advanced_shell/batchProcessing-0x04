#!/bin/bash
# Task 5: Parallel Data Fetching
# Fetch Pokémon data in parallel

POKEMON_LIST=(bulbasaur ivysaur venusaur charmander charmeleon)
DATA_DIR="pokemon_data"
API_URL="https://pokeapi.co/api/v2/pokemon"
ERROR_LOG="errors.txt"

mkdir -p "$DATA_DIR"
PIDS=()

# Trap to ensure all background jobs are cleaned up on interrupt or error
cleanup() {
    if [ ${#PIDS[@]} -gt 0 ]; then
        echo "Cleaning up background jobs..."
        kill ${PIDS[@]} 2>/dev/null || true
    fi
}
trap cleanup INT TERM ERR

for NAME in "${POKEMON_LIST[@]}"; do
    echo "Fetching data for $NAME..."
    OUTFILE="$DATA_DIR/$NAME.json"
    (
        curl -s "$API_URL/$NAME" -o "$OUTFILE"
        if [ $? -eq 0 ] && [ -s "$OUTFILE" ]; then
            echo "Saved data to $OUTFILE ✅"
        else
            echo "Error fetching $NAME" >> "$ERROR_LOG"
            rm -f "$OUTFILE"
        fi
    ) &
    PIDS+=( $! )
done

# Wait for all background jobs and capture exit codes
FAIL=0
for PID in "${PIDS[@]}"; do
    if ! wait $PID; then
        FAIL=1
    fi
done

trap - INT TERM ERR

if [ $FAIL -eq 0 ]; then
    echo "All fetches complete."
else
    echo "Some fetches failed. See $ERROR_LOG for details."
fi
